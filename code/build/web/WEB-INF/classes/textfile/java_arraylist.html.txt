Java ArrayList w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × Java Tutorial Java HOME Java Intro Java Get Started Java Syntax Java Comments Java Variables Java Data Types Java Operators Java Strings Java Math Java Booleans Java If...Else Java Switch Java While Loop Java For Loop Java Break/Continue Java Arrays Java Exceptions Java Methods Java Classes Java Classes/Objects Java Class Attributes Java Class Methods Java Constructors Java Modifiers Java Encapsulation Java Packages / API Java Inheritance Java Polymorphism Java Interface Java Enums Java User Input Java Date Java ArrayList Java HashMap Java Files Java Examples Java Examples Java ArrayList ❮ Previous Next ❯ Java ArrayList The ArrayList class is a resizable array, which can be found in the java.util package. The difference between a built-in array and an ArrayList in Java, is that the size of an array cannot be modified (if you want to add or remove elements to/from an array, you have to create a new one). While elements can be added and removed from an ArrayList whenever you want. The syntax is also slightly different: Example Create an ArrayList object called cars that will store strings: import java.util.ArrayList; // import the ArrayList class ArrayList<String> cars = new ArrayList<String>(); // Create an ArrayList object If you don't know what a package is, read our Java Packages Tutorial. Add Items The ArrayList class has many useful methods. For example, to add elements to the ArrayList, use the add() method: Example import java.util.ArrayList; public class MyClass { public static void main(String[] args) { ArrayList<String> cars = new ArrayList<String>(); cars.add("Volvo"); cars.add("BMW"); cars.add("Ford"); cars.add("Mazda"); System.out.println(cars); } } Run example » Access an Item To access an element in the ArrayList, use the get() method and refer to the index number: Example cars.get(0); Run example » Remember: Array indexes start with 0: [0] is the first element. [1] is the second element, etc. Change an Item To modify an element, use the set() method and refer to the index number: Example cars.set(0, "Opel"); Run example » Remove an Item To remove an element, use the remove() method and refer to the index number: Example cars.remove(0); Run example » To remove all the elements in the ArrayList, use the clear() method: Example cars.clear(); Run example » ArrayList Size To find out how many elements an ArrayList have, use the size method: Example cars.size(); Run example » Loop Through an ArrayList Loop through the elements of an ArrayList with a for loop, and use the size() method to specify how many times the loop should run: Example public class MyClass { public static void main(String[] args) { ArrayList<String> cars = new ArrayList<String>(); cars.add("Volvo"); cars.add("BMW"); cars.add("Ford"); cars.add("Mazda"); for (int i = 0; i < cars.size(); i++) { System.out.println(cars.get(i)); } } } Run example » You can also loop through an ArrayList with the for-each loop: Example public class MyClass { public static void main(String[] args) { ArrayList<String> cars = new ArrayList<String>(); cars.add("Volvo"); cars.add("BMW"); cars.add("Ford"); cars.add("Mazda"); for (String i : cars) { System.out.println(i); } } } Run example » Other Types Elements in an ArrayList is actually objects. In the examples above, we created elements (objects) of type "String". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent wrapper class: Integer. For other primitive types, use: Boolean for boolean, Character for char, Double for double, etc: Example Create an ArrayList to store numbers (add elements of type Integer): import java.util.ArrayList; public class MyClass { public static void main(String[] args) { ArrayList<Integer> myNumbers = new ArrayList<Integer>(); myNumbers.add(10); myNumbers.add(15); myNumbers.add(20; myNumbers.add(25); for (int i : myNumbers) { System.out.println(i); } } } Run example » Sort an ArrayList Another useful class in the java.util package is the Collections class, which include the sort() method for sorting lists alphabetically or numerically: Example Sort an ArrayList of Strings: import java.util.ArrayList; import java.util.Collections; // Import the Collections class public class MyClass { public static void main(String[] args) { ArrayList<String> cars = new ArrayList<String>(); cars.add("Volvo"); cars.add("BMW"); cars.add("Ford"); cars.add("Mazda"); Collections.sort(cars); // Sort cars for (String i : cars) { System.out.println(i); } } } Run example » Example Sort an ArrayList of Integers: import java.util.ArrayList; import java.util.Collections; // Import the Collections class public class MyClass { public static void main(String[] args) { ArrayList<Integer> myNumbers = new ArrayList<Integer>(); myNumbers.add(33); myNumbers.add(15); myNumbers.add(20); myNumbers.add(34); myNumbers.add(8); myNumbers.add(12); Collections.sort(myNumbers); // Sort myNumbers for (int i : myNumbers) { System.out.println(i); } } } Run example » ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
