PHP 5 Array Functions w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × PHP Tutorial PHP HOME PHP Intro PHP Install PHP Syntax PHP Variables PHP Echo / Print PHP Data Types PHP Strings PHP Constants PHP Operators PHP If...Else...Elseif PHP Switch PHP While Loops PHP For Loops PHP Functions PHP Arrays PHP Sorting Arrays PHP Superglobals PHP Forms PHP Form Handling PHP Form Validation PHP Form Required PHP Form URL/E-mail PHP Form Complete PHP Advanced PHP Arrays Multi PHP Date and Time PHP Include PHP File Handling PHP File Open/Read PHP File Create/Write PHP File Upload PHP Cookies PHP Sessions PHP Filters PHP Filters Advanced PHP Error Handling PHP Exception MySQL Database MySQL Database MySQL Connect MySQL Create DB MySQL Create Table MySQL Insert Data MySQL Get Last ID MySQL Insert Multiple MySQL Prepared MySQL Select Data MySQL Delete Data MySQL Update Data MySQL Limit Data PHP - XML PHP XML Parsers PHP SimpleXML Parser PHP SimpleXML - Get PHP XML Expat PHP XML DOM PHP - AJAX AJAX Intro AJAX PHP AJAX Database AJAX XML AJAX Live Search AJAX RSS Reader AJAX Poll PHP Examples PHP Examples PHP Quiz PHP Exercises PHP Certificate PHP Reference PHP Overview PHP Array PHP Calendar PHP Date PHP Directory PHP Error PHP Filesystem PHP Filter PHP FTP PHP HTTP PHP Libxml PHP Mail PHP Math PHP Misc PHP MySQLi PHP SimpleXML PHP String PHP XML PHP Zip PHP Timezones PHP 5 Array Functions ❮ Previous Next ❯ PHP Array Introduction The array functions allow you to access and manipulate arrays. Simple and multi-dimensional arrays are supported. Installation The array functions are part of the PHP core. There is no installation needed to use these functions. PHP 5 Array Functions Function Description array() Creates an array array_change_key_case() Changes all keys in an array to lowercase or uppercase array_chunk() Splits an array into chunks of arrays array_column() Returns the values from a single column in the input array array_combine() Creates an array by using the elements from one "keys" array and one "values" array array_count_values() Counts all the values of an array array_diff() Compare arrays, and returns the differences (compare values only) array_diff_assoc() Compare arrays, and returns the differences (compare keys and values) array_diff_key() Compare arrays, and returns the differences (compare keys only) array_diff_uassoc() Compare arrays, and returns the differences (compare keys and values, using a user-defined key comparison function) array_diff_ukey() Compare arrays, and returns the differences (compare keys only, using a user-defined key comparison function) array_fill() Fills an array with values array_fill_keys() Fills an array with values, specifying keys array_filter() Filters the values of an array using a callback function array_flip() Flips/Exchanges all keys with their associated values in an array array_intersect() Compare arrays, and returns the matches (compare values only) array_intersect_assoc() Compare arrays and returns the matches (compare keys and values) array_intersect_key() Compare arrays, and returns the matches (compare keys only) array_intersect_uassoc() Compare arrays, and returns the matches (compare keys and values, using a user-defined key comparison function) array_intersect_ukey() Compare arrays, and returns the matches (compare keys only, using a user-defined key comparison function) array_key_exists() Checks if the specified key exists in the array array_keys() Returns all the keys of an array array_map() Sends each value of an array to a user-made function, which returns new values array_merge() Merges one or more arrays into one array array_merge_recursive() Merges one or more arrays into one array recursively array_multisort() Sorts multiple or multi-dimensional arrays array_pad() Inserts a specified number of items, with a specified value, to an array array_pop() Deletes the last element of an array array_product() Calculates the product of the values in an array array_push() Inserts one or more elements to the end of an array array_rand() Returns one or more random keys from an array array_reduce() Returns an array as a string, using a user-defined function array_replace() Replaces the values of the first array with the values from following arrays array_replace_recursive() Replaces the values of the first array with the values from following arrays recursively array_reverse() Returns an array in the reverse order array_search() Searches an array for a given value and returns the key array_shift() Removes the first element from an array, and returns the value of the removed element array_slice() Returns selected parts of an array array_splice() Removes and replaces specified elements of an array array_sum() Returns the sum of the values in an array array_udiff() Compare arrays, and returns the differences (compare values only, using a user-defined key comparison function) array_udiff_assoc() Compare arrays, and returns the differences (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values) array_udiff_uassoc() Compare arrays, and returns the differences (compare keys and values, using two user-defined key comparison functions) array_uintersect() Compare arrays, and returns the matches (compare values only, using a user-defined key comparison function) array_uintersect_assoc() Compare arrays, and returns the matches (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values) array_uintersect_uassoc() Compare arrays, and returns the matches (compare keys and values, using two user-defined key comparison functions) array_unique() Removes duplicate values from an array array_unshift() Adds one or more elements to the beginning of an array array_values() Returns all the values of an array array_walk() Applies a user function to every member of an array array_walk_recursive() Applies a user function recursively to every member of an array arsort() Sorts an associative array in descending order, according to the value asort() Sorts an associative array in ascending order, according to the value compact() Create array containing variables and their values count() Returns the number of elements in an array current() Returns the current element in an array each() Returns the current key and value pair from an array end() Sets the internal pointer of an array to its last element extract() Imports variables into the current symbol table from an array in_array() Checks if a specified value exists in an array key() Fetches a key from an array krsort() Sorts an associative array in descending order, according to the key ksort() Sorts an associative array in ascending order, according to the key list() Assigns variables as if they were an array natcasesort() Sorts an array using a case insensitive "natural order" algorithm natsort() Sorts an array using a "natural order" algorithm next() Advance the internal array pointer of an array pos() Alias of current() prev() Rewinds the internal array pointer range() Creates an array containing a range of elements reset() Sets the internal pointer of an array to its first element rsort() Sorts an indexed array in descending order shuffle() Shuffles an array sizeof() Alias of count() sort() Sorts an indexed array in ascending order uasort() Sorts an array by values using a user-defined comparison function uksort() Sorts an array by keys using a user-defined comparison function usort() Sorts an array using a user-defined comparison function ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
