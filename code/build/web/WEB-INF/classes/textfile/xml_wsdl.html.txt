XML WSDL w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × XML Tutorial XML HOME XML Introduction XML How to use XML Tree XML Syntax XML Elements XML Attributes XML Namespaces XML Display XML HttpRequest XML Parser XML DOM XML XPath XML XSLT XML XQuery XML XLink XML Validator XML DTD XML Schema XML Server XML Examples XML Quiz XML Certificate XML AJAX AJAX Introduction AJAX XMLHttp AJAX Request AJAX Response AJAX XML File AJAX PHP AJAX ASP AJAX Database AJAX Applications AJAX Examples XML DOM DOM Introduction DOM Nodes DOM Accessing DOM Node Info DOM Node List DOM Traversing DOM Navigating DOM Get Values DOM Change Nodes DOM Remove Nodes DOM Replace Nodes DOM Create Nodes DOM Add Nodes DOM Clone Nodes DOM Examples XPath Tutorial XPath Introduction XPath Nodes XPath Syntax XPath Axes XPath Operators XPath Examples XSLT Tutorial XSLT Introduction XSL Languages XSLT Transform XSLT <template> XSLT <value-of> XSLT <for-each> XSLT <sort> XSLT <if> XSLT <choose> XSLT Apply XSLT on the Client XSLT on the Server XSLT Edit XML XSLT Examples XQuery Tutorial XQuery Introduction XQuery Example XQuery FLWOR XQuery HTML XQuery Terms XQuery Syntax XQuery Add XQuery Select XQuery Functions XML DTD DTD Introduction DTD Building Blocks DTD Elements DTD Attributes DTD Elements vs Attr DTD Entities DTD Examples XSD Schema XSD Introduction XSD How To XSD <schema> XSD Elements XSD Attributes XSD Restrictions XSD Complex XSD Elements XSD Empty XSD Elements Only XSD Text Only XSD Mixed XSD Indicators XSD <any> XSD <anyAttribute> XSD Substitution XSD Example XSD Data XSD String XSD Date XSD Numeric XSD Misc XSD Reference Web Services XML Services XML WSDL XML SOAP XML RDF XML RSS References DOM Node Types DOM Node DOM NodeList DOM NamedNodeMap DOM Document DOM Element DOM Attribute DOM Text DOM CDATA DOM Comment DOM XMLHttpRequest DOM Parser XSLT Elements XSLT/XPath Functions XML WSDL ❮ Previous Next ❯ WSDL stands for Web Services Description Language WSDL is used to describe web services WSDL is written in XML WSDL is a W3C recommendation from 26. June 2007 WSDL Documents An WSDL document describes a web service. It specifies the location of the service, and the methods of the service, using these major elements: Element Description <types> Defines the (XML Schema) data types used by the web service <message> Defines the data elements for each operation <portType> Describes the operations that can be performed and the messages involved. <binding> Defines the protocol and data format for each port type The main structure of a WSDL document looks like this: <definitions> <types> data type definitions........ </types> <message> definition of the data being communicated.... </message> <portType> set of operations...... </portType> <binding> protocol and data format specification.... </binding> </definitions> WSDL Example This is a simplified fraction of a WSDL document: <message name="getTermRequest"> <part name="term" type="xs:string"/> </message> <message name="getTermResponse"> <part name="value" type="xs:string"/> </message> <portType name="glossaryTerms"> <operation name="getTerm"> <input message="getTermRequest"/> <output message="getTermResponse"/> </operation> </portType> In this example the <portType> element defines "glossaryTerms" as the name of a port, and "getTerm" as the name of an operation. The "getTerm" operation has an input message called "getTermRequest" and an output message called "getTermResponse". The <message> elements define the parts of each message and the associated data types. The <portType> Element The <portType> element defines a web service, the operations that can be performed, and the messages that are involved. The request-response type is the most common operation type, but WSDL defines four types: Type Definition One-way The operation can receive a message but will not return a response Request-response The operation can receive a request and will return a response Solicit-response The operation can send a request and will wait for a response Notification The operation can send a message but will not wait for a response WSDL One-Way Operation A one-way operation example: <message name="newTermValues"> <part name="term" type="xs:string"/> <part name="value" type="xs:string"/> </message> <portType name="glossaryTerms"> <operation name="setTerm"> <input name="newTerm" message="newTermValues"/> </operation> </portType > In the example above, the portType "glossaryTerms" defines a one-way operation called "setTerm". The "setTerm" operation allows input of new glossary terms messages using a "newTermValues" message with the input parameters "term" and "value". However, no output is defined for the operation. WSDL Request-Response Operation A request-response operation example: <message name="getTermRequest"> <part name="term" type="xs:string"/> </message> <message name="getTermResponse"> <part name="value" type="xs:string"/> </message> <portType name="glossaryTerms"> <operation name="getTerm"> <input message="getTermRequest"/> <output message="getTermResponse"/> </operation> </portType> In the example above, the portType "glossaryTerms" defines a request-response operation called "getTerm". The "getTerm" operation requires an input message called "getTermRequest" with a parameter called "term", and will return an output message called "getTermResponse" with a parameter called "value". WSDL Binding to SOAP WSDL bindings defines the message format and protocol details for a web service. A request-response operation example: <message name="getTermRequest"> <part name="term" type="xs:string"/> </message> <message name="getTermResponse"> <part name="value" type="xs:string"/> </message> <portType name="glossaryTerms"> <operation name="getTerm"> <input message="getTermRequest"/> <output message="getTermResponse"/> </operation> </portType> <binding type="glossaryTerms" name="b1"> <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" /> <operation> <soap:operation soapAction="http://example.com/getTerm"/> <input><soap:body use="literal"/></input> <output><soap:body use="literal"/></output> </operation> </binding> The binding element has two attributes - name and type. The name attribute (you can use any name you want) defines the name of the binding, and the type attribute points to the port for the binding, in this case the "glossaryTerms" port. The soap:binding element has two attributes - style and transport. The style attribute can be "rpc" or "document". In this case we use document. The transport attribute defines the SOAP protocol to use. In this case we use HTTP. The operation element defines each operation that the portType exposes. For each operation the corresponding SOAP action has to be defined. You must also specify how the input and output are encoded. In this case we use "literal". ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
