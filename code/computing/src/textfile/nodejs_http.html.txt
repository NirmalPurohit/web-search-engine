Node.js HTTP Module w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × Node.js Tutorial Node.js HOME Node.js Intro Node.js Get Started Node.js Modules Node.js HTTP Module Node.js File System Node.js URL Module Node.js NPM Node.js Events Node.js Upload Files Node.js Email Node.js MySQL MySQL Get Started MySQL Create Database MySQL Create Table MySQL Insert Into MySQL Select From MySQL Where MySQL Order By MySQL Delete MySQL Drop Table MySQL Update MySQL Limit MySQL Join Node.js MongoDB MongoDB Get Started MongoDB Create Database MongoDB Create Collection MongoDB Insert MongoDB Find MongoDB Query MongoDB Sort MongoDB Delete MongoDB Drop Collection MongoDB Update MongoDB Limit MongoDB Join Raspberry Pi RasPi Get Started RasPi GPIO Introduction RasPi Blinking LED RasPi LED & Pushbutton RasPi Flowing LEDs RasPi WebSocket RasPi RGB LED WebSocket RasPi Components Node.js Reference Built-in Modules Node.js HTTP Module ❮ Previous Next ❯ The Built-in HTTP Module Node.js has a built-in module called HTTP, which allows Node.js to transfer data over the Hyper Text Transfer Protocol (HTTP). To include the HTTP module, use the require() method: var http = require('http'); Node.js as a Web Server The HTTP module can create an HTTP server that listens to server ports and gives a response back to the client. Use the createServer() method to create an HTTP server: Example var http = require('http'); //create a server object: http.createServer(function (req, res) { res.write('Hello World!'); //write a response to the client res.end(); //end the response }).listen(8080); //the server object listens on port 8080 Run example » The function passed into the http.createServer() method, will be executed when someone tries to access the computer on port 8080. Save the code above in a file called "demo_http.js", and initiate the file: Initiate demo_http.js: C:\Users\Your Name>node demo_http.js If you have followed the same steps on your computer, you will see the same result as the example: http://localhost:8080 Add an HTTP Header If the response from the HTTP server is supposed to be displayed as HTML, you should include an HTTP header with the correct content type: Example var http = require('http'); http.createServer(function (req, res) { res.writeHead(200, {'Content-Type': 'text/html'}); res.write('Hello World!'); res.end(); }).listen(8080); Run example » The first argument of the res.writeHead() method is the status code, 200 means that all is OK, the second argument is an object containing the response headers. Read the Query String The function passed into the http.createServer() has a req argument that represents the request from the client, as an object (http.IncomingMessage object). This object has a property called "url" which holds the part of the url that comes after the domain name: demo_http_url.js var http = require('http'); http.createServer(function (req, res) { res.writeHead(200, {'Content-Type': 'text/html'}); res.write(req.url); res.end(); }).listen(8080); Save the code above in a file called "demo_http_url.js" and initiate the file: Initiate demo_http_url.js: C:\Users\Your Name>node demo_http_url.js If you have followed the same steps on your computer, you should see two different results when opening these two addresses: http://localhost:8080/summer Will produce this result: /summer Run example » http://localhost:8080/winter Will produce this result: /winter Run example » Split the Query String There are built-in modules to easily split the query string into readable parts, such as the URL module. Example Split the query string into readable parts: var http = require('http'); var url = require('url'); http.createServer(function (req, res) { res.writeHead(200, {'Content-Type': 'text/html'}); var q = url.parse(req.url, true).query; var txt = q.year + " " + q.month; res.end(txt); }).listen(8080); Save the code above in a file called "demo_querystring.js" and initiate the file: Initiate demo_querystring.js: C:\Users\Your Name>node demo_querystring.js The address: http://localhost:8080/?year=2017&month=July Will produce this result: 2017 July Run example » Read more about the URL module in the Node.js URL Module chapter. ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
