JavaScript DOM Navigation w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × JS Tutorial JS HOME JS Introduction JS Where To JS Output JS Statements JS Syntax JS Comments JS Variables JS Operators JS Arithmetic JS Assignment JS Data Types JS Functions JS Objects JS Events JS Strings JS String Methods JS Numbers JS Number Methods JS Arrays JS Array Methods JS Array Sort JS Array Iteration JS Dates JS Date Formats JS Date Get Methods JS Date Set Methods JS Math JS Random JS Booleans JS Comparisons JS Conditions JS Switch JS Loop For JS Loop While JS Break JS Type Conversion JS Bitwise JS RegExp JS Errors JS Scope JS Hoisting JS Strict Mode JS this Keyword JS Let JS Const JS Debugging JS Style Guide JS Best Practices JS Mistakes JS Performance JS Reserved Words JS Versions JS Version ES5 JS Version ES6 JS JSON JS Forms JS Forms Forms API JS Objects Object Definitions Object Properties Object Methods Object Accessors Object Constructors Object Prototypes Object ECMAScript 5 JS Functions Function Definitions Function Parameters Function Invocation Function Call Function Apply Function Closures JS HTML DOM DOM Intro DOM Methods DOM Document DOM Elements DOM HTML DOM CSS DOM Animations DOM Events DOM Event Listener DOM Navigation DOM Nodes DOM Collections DOM Node Lists JS Browser BOM JS Window JS Screen JS Location JS History JS Navigator JS Popup Alert JS Timing JS Cookies JS AJAX AJAX Intro AJAX XMLHttp AJAX Request AJAX Response AJAX XML File AJAX PHP AJAX ASP AJAX Database AJAX Applications AJAX Examples JS JSON JSON Intro JSON Syntax JSON vs XML JSON Data Types JSON Parse JSON Stringify JSON Objects JSON Arrays JSON PHP JSON HTML JSON JSONP JS vs jQuery jQuery Selectors jQuery HTML jQuery CSS jQuery DOM JS Examples JS Examples JS HTML DOM JS HTML Input JS HTML Objects JS HTML Events JS Browser JS Exercises JS Quiz JS Certificate JS References JavaScript Objects HTML DOM Objects JavaScript HTML DOM Navigation ❮ Previous Next ❯ With the HTML DOM, you can navigate the node tree using node relationships. DOM Nodes According to the W3C HTML DOM standard, everything in an HTML document is a node: The entire document is a document node Every HTML element is an element node The text inside HTML elements are text nodes Every HTML attribute is an attribute node (deprecated) All comments are comment nodes With the HTML DOM, all nodes in the node tree can be accessed by JavaScript. New nodes can be created, and all nodes can be modified or deleted. Node Relationships The nodes in the node tree have a hierarchical relationship to each other. The terms parent, child, and sibling are used to describe the relationships. In a node tree, the top node is called the root (or root node) Every node has exactly one parent, except the root (which has no parent) A node can have a number of children Siblings (brothers or sisters) are nodes with the same parent <html> <head> <title>DOM Tutorial</title> </head> <body> <h1>DOM Lesson one</h1> <p>Hello world!</p> </body> </html> From the HTML above you can read: <html> is the root node <html> has no parents <html> is the parent of <head> and <body> <head> is the first child of <html> <body> is the last child of <html> and: <head> has one child: <title> <title> has one child (a text node): "DOM Tutorial" <body> has two children: <h1> and <p> <h1> has one child: "DOM Lesson one" <p> has one child: "Hello world!" <h1> and <p> are siblings Navigating Between Nodes You can use the following node properties to navigate between nodes with JavaScript: parentNode childNodes[nodenumber] firstChild lastChild nextSibling previousSibling Child Nodes and Node Values A common error in DOM processing is to expect an element node to contain text. Example: <title id="demo">DOM Tutorial</title> The element node <title> (in the example above) does not contain text. It contains a text node with the value "DOM Tutorial". The value of the text node can be accessed by the node's innerHTML property: var myTitle = document.getElementById("demo").innerHTML; Accessing the innerHTML property is the same as accessing the nodeValue of the first child: var myTitle = document.getElementById("demo").firstChild.nodeValue; Accessing the first child can also be done like this: var myTitle = document.getElementById("demo").childNodes[0].nodeValue; All the (3) following examples retrieves the text of an <h1> element and copies it into a <p> element: Example <html> <body> <h1 id="id01">My First Page</h1> <p id="id02"></p> <script> document.getElementById("id02").innerHTML = document.getElementById("id01").innerHTML; </script> </body> </html> Try it Yourself » Example <html> <body> <h1 id="id01">My First Page</h1> <p id="id02"></p> <script> document.getElementById("id02").innerHTML = document.getElementById("id01").firstChild.nodeValue; </script> </body> </html> Try it Yourself » Example <html> <body> <h1 id="id01">My First Page</h1> <p id="id02">Hello!</p> <script> document.getElementById("id02").innerHTML = document.getElementById("id01").childNodes[0].nodeValue; </script> </body> </html> Try it Yourself » InnerHTML In this tutorial we use the innerHTML property to retrieve the content of an HTML element. However, learning the other methods above is useful for understanding the tree structure and the navigation of the DOM. DOM Root Nodes There are two special properties that allow access to the full document: document.body - The body of the document document.documentElement - The full document Example <html> <body> <p>Hello World!</p> <div> <p>The DOM is very useful!</p> <p>This example demonstrates the <b>document.body</b> property.</p> </div> <script> alert(document.body.innerHTML); </script> </body> </html> Try it Yourself » Example <html> <body> <p>Hello World!</p> <div> <p>The DOM is very useful!</p> <p>This example demonstrates the <b>document.documentElement</b> property.</p> </div> <script> alert(document.documentElement.innerHTML); </script> </body> </html> Try it Yourself » The nodeName Property The nodeName property specifies the name of a node. nodeName is read-only nodeName of an element node is the same as the tag name nodeName of an attribute node is the attribute name nodeName of a text node is always #text nodeName of the document node is always #document Example <h1 id="id01">My First Page</h1> <p id="id02"></p> <script> document.getElementById("id02").innerHTML = document.getElementById("id01").nodeName; </script> Try it Yourself » Note: nodeName always contains the uppercase tag name of an HTML element. The nodeValue Property The nodeValue property specifies the value of a node. nodeValue for element nodes is undefined nodeValue for text nodes is the text itself nodeValue for attribute nodes is the attribute value The nodeType Property The nodeType property is read only. It returns the type of a node. Example <h1 id="id01">My First Page</h1> <p id="id02"></p> <script> document.getElementById("id02").innerHTML = document.getElementById("id01").nodeType; </script> Try it Yourself » The most important nodeType properties are: Node Type Example ELEMENT_NODE 1 <h1 class="heading">W3Schools</h1> ATTRIBUTE_NODE 2 class = "heading" (deprecated) TEXT_NODE 3 W3Schools COMMENT_NODE 8 <!-- This is a comment --> DOCUMENT_NODE 9 The HTML document itself (the parent of <html>) DOCUMENT_TYPE_NODE 10 <!Doctype html> Type 2 is deprecated in the HTML DOM (but works). It is not deprecated in the XML DOM. ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
