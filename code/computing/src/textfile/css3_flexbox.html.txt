CSS Flexbox (Flexible Box) w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × CSS Tutorial CSS HOME CSS Introduction CSS Syntax CSS How To CSS Colors CSS Backgrounds CSS Borders CSS Margins CSS Padding CSS Height/Width CSS Box Model CSS Outline CSS Text CSS Fonts CSS Icons CSS Links CSS Lists CSS Tables CSS Display CSS Max-width CSS Position CSS Overflow CSS Float CSS Inline-block CSS Align CSS Combinators CSS Pseudo-class CSS Pseudo-element CSS Opacity CSS Navigation Bar CSS Dropdowns CSS Image Gallery CSS Image Sprites CSS Attr Selectors CSS Forms CSS Counters CSS Website Layout CSS Units CSS Specificity CSS Advanced CSS Rounded Corners CSS Border Images CSS Backgrounds CSS Colors CSS Gradients CSS Shadows CSS Text Effects CSS Web Fonts CSS 2D Transforms CSS 3D Transforms CSS Transitions CSS Animations CSS Tooltips CSS Style Images CSS object-fit CSS Buttons CSS Pagination CSS Multiple Columns CSS User Interface CSS Variables CSS Box Sizing CSS Flexbox CSS Media Queries CSS MQ Examples CSS Responsive RWD Intro RWD Viewport RWD Grid View RWD Media Queries RWD Images RWD Videos RWD Frameworks RWD Templates CSS Grid Grid Intro Grid Container Grid Item CSS Examples CSS Templates CSS Examples CSS Quiz CSS Exercises CSS Certificate CSS References CSS Reference CSS Selectors CSS Functions CSS Reference Aural CSS Web Safe Fonts CSS Animatable CSS Units CSS PX-EM Converter CSS Colors CSS Color Values CSS Default Values CSS Browser Support CSS Flexbox ❮ Previous Next ❯ 1 2 3 4 5 6 7 8 Try it Yourself » CSS Flexbox Layout Module Before the Flexbox Layout module, there were four layout modes: Block, for sections in a webpage Inline, for text Table, for two-dimensional table data Positioned, for explicit position of an element The Flexible Box Layout Module, makes it easier to design flexible responsive layout structure without using float or positioning. Browser Support The flexbox properties are supported in all modern browsers. 29.0 11.0 22.0 10 48 Flexbox Elements To start using the Flexbox model, you need to first define a flex container. 1 2 3 The element above represents a flex container (the blue area) with three flex items. Example A flex container with three flex items: <div class="flex-container"> <div>1</div> <div>2</div> <div>3</div> </div> Try it Yourself » Parent Element (Container) The flex container becomes flexible by setting the display property to flex: Example .flex-container { display: flex; } The flex container properties are: flex-direction flex-wrap flex-flow justify-content align-items align-content The flex-direction Property The flex-direction property defines in which direction the container wants to stack the flex items. 1 2 3 Example The column value stacks the flex items vertically (from top to bottom): .flex-container { display: flex; flex-direction: column; } Try it Yourself » Example The column-reverse value stacks the flex items vertically (but from bottom to top): .flex-container { display: flex; flex-direction: column-reverse; } Try it Yourself » Example The row value stacks the flex items horizontally (from left to right): .flex-container { display: flex; flex-direction: row; } Try it Yourself » Example The row-reverse value stacks the flex items horizontally (but from right to left): .flex-container { display: flex; flex-direction: row-reverse; } Try it Yourself » The flex-wrap Property The flex-wrap property specifies whether the flex items should wrap or not. The examples below have 12 flex items, to better demonstrate the flex-wrap property. 1 2 3 4 5 6 7 8 9 10 11 12 Example The wrap value specifies that the flex items will wrap if necessary: .flex-container { display: flex; flex-wrap: wrap; } Try it Yourself » Example The nowrap value specifies that the flex items will not wrap (this is default): .flex-container { display: flex; flex-wrap: nowrap; } Try it Yourself » Example The wrap-reverse value specifies that the flexible items will wrap if necessary, in reverse order: .flex-container { display: flex; flex-wrap: wrap-reverse; } Try it Yourself » The flex-flow Property The flex-flow property is a shorthand property for setting both the flex-direction and flex-wrap properties. Example .flex-container { display: flex; flex-flow: row wrap; } Try it Yourself » The justify-content Property The justify-content property is used to align the flex items: 1 2 3 Example The center value aligns the flex items at the center of the container: .flex-container { display: flex; justify-content: center; } Try it Yourself » Example The flex-start value aligns the flex items at the beginning of the container (this is default): .flex-container { display: flex; justify-content: flex-start; } Try it Yourself » Example The flex-end value aligns the flex items at the end of the container: .flex-container { display: flex; justify-content: flex-end; } Try it Yourself » Example The space-around value displays the flex items with space before, between, and after the lines: .flex-container { display: flex; justify-content: space-around; } Try it Yourself » Example The space-between value displays the flex items with space between the lines: .flex-container { display: flex; justify-content: space-between; } Try it Yourself » The align-items Property The align-items property is used to align the flex items vertically. 1 2 3 In these examples we use a 200 pixels high container, to better demonstrate the align-items property. Example The center value aligns the flex items in the middle of the container: .flex-container { display: flex; height: 200px; align-items: center; } Try it Yourself » Example The flex-start value aligns the flex items at the top of the container: .flex-container { display: flex; height: 200px; align-items: flex-start; } Try it Yourself » Example The flex-end value aligns the flex items at the bottom of the container: .flex-container { display: flex; height: 200px; align-items: flex-end; } Try it Yourself » Example The stretch value stretches the flex items to fill the container (this is default): .flex-container { display: flex; height: 200px; align-items: stretch; } Try it Yourself » Example The baseline value aligns the flex items such as their baselines aligns: .flex-container { display: flex; height: 200px; align-items: baseline; } Note: the example uses different font-size to demonstrate that the items gets aligned by the text baseline: 1 2 3 4 Try it Yourself » The align-content Property The align-content property is used to align the flex lines. 1 2 3 4 5 6 7 8 9 10 11 12 In these examples we use a 600 pixels high container, with the flex-wrap property set to wrap, to better demonstrate the align-content property. Example The space-between value displays the flex lines with equal space between them: .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: space-between; } Try it Yourself » Example The space-around value displays the flex lines with space before, between, and after them: .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: space-around; } Try it Yourself » Example The stretch value stretches the flex lines to take up the remaining space (this is default): .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: stretch; } Try it Yourself » Example The center value displays display the flex lines in the middle of the container: .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: center; } Try it Yourself » Example The flex-start value displays the flex lines at the start of the container: .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: flex-start; } Try it Yourself » Example The flex-end value displays the flex lines at the end of the container: .flex-container { display: flex; height: 600px; flex-wrap: wrap; align-content: flex-end; } Try it Yourself » Perfect Centering In the following example we will solve a very common style problem: perfect centering. SOLUTION: Set both the justify-content and align-items properties to center, and the flex item will be perfectly centered: Example .flex-container { display: flex; height: 300px; justify-content: center; align-items: center; } Try it Yourself » Child Elements (Items) The direct child elements of a flex container automatically becomes flexible (flex) items. 1 2 3 4 The element above represents four blue flex items inside a grey flex container. Example <div class="flex-container"> <div>1</div> <div>2</div> <div>3</div> <div>4</div> </div> Try it Yourself » The flex item properties are: order flex-grow flex-shrink flex-basis flex align-self The order Property The order property specifies the order of the flex items. 1 2 3 4 The first flex item in the code does not have to appear as the first item in the layout. The order value must be a number, default value is 0. Example The order property can change the order of the flex items: <div class="flex-container"> <div style="order: 3">1</div> <div style="order: 2">2</div> <div style="order: 4">3</div> <div style="order: 1">4</div> </div> Try it Yourself » The flex-grow Property The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items. 1 2 3 The value must be a number, default value is 0. Example Make the third flex item grow eight times faster than the other flex items: <div class="flex-container"> <div style="flex-grow: 1">1</div> <div style="flex-grow: 1">2</div> <div style="flex-grow: 8">3</div> </div> Try it Yourself » The flex-shrink Property The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items. 1 2 3 4 5 6 7 8 9 10 The value must be a number, default value is 1. Example Do not let the third flex item shrink as much as the other flex items: <div class="flex-container"> <div>1</div> <div>2</div> <div style="flex-shrink: 0">3</div> <div>4</div> <div>5</div> <div>6</div> <div>7</div> <div>8</div> <div>9</div> <div>10</div> </div> Try it Yourself » The flex-basis Property The flex-basis property specifies the initial length of a flex item. 1 2 3 4 Example Set the initial length of the third flex item to 200 pixels: <div class="flex-container"> <div>1</div> <div>2</div> <div style="flex-basis: 200px">3</div> <div>4</div> </div> Try it Yourself » The flex Property The flex property is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties. Example Make the third flex item not growable (0), not shrinkable (0), and with an initial length of 200 pixels: <div class="flex-container"> <div>1</div> <div>2</div> <div style="flex: 0 0 200px">3</div> <div>4</div> </div> Try it Yourself » The align-self Property The align-self property specifies the alignment for the selected item inside the flexible container. The align-self property overrides the default alignment set by the container's align-items property. 1 2 3 4 In these examples we use a 200 pixels high container, to better demonstrate the align-self property: Example Align the third flex item in the middle of the container: <div class="flex-container"> <div>1</div> <div>2</div> <div style="align-self: center">3</div> <div>4</div> </div> Try it Yourself » Example Align the second flex item at the top of the container, and the third flex item at the bottom of the container: <div class="flex-container"> <div>1</div> <div style="align-self: flex-start">2</div> <div style="align-self: flex-end">3</div> <div>4</div> </div> Try it Yourself » Responsive Image Gallery using Flexbox Use flexbox to create a responsive image gallery that varies between four, two or full-width images, depending on screen size: Try it Yourself » Responsive Website using Flexbox Use flexbox to create a responsive website, containing a flexible navigation bar and flexible content: Try it Yourself » CSS Flexbox Properties The following table lists the CSS properties used with flexbox: Property Description display Specifies the type of box used for an HTML element flex-direction Specifies the direction of the flexible items inside a flex container justify-content Horizontally aligns the flex items when the items do not use all available space on the main-axis align-items Vertically aligns the flex items when the items do not use all available space on the cross-axis flex-wrap Specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line align-content Modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines flex-flow A shorthand property for flex-direction and flex-wrap order Specifies the order of a flexible item relative to the rest of the flex items inside the same container align-self Used on flex items. Overrides the container's align-items property flex A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
