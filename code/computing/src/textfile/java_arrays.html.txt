Java Arrays w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP HOW TO JQUERY W3.CSS PYTHON XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Server Side Learn SQL Learn PHP Learn Python Learn Java Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 CSS CSS Reference CSS Browser Support CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Server Side PHP Reference SQL Reference Python Reference ASP Reference × HTML/CSS HTML Examples HTML Exercises CSS Examples CSS Exercises W3.CSS Examples W3.CSS Templates Bootstrap Examples How To Examples SVG Examples JavaScript JavaScript Examples JavaScript Exercises HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples SQL Exercises Python Exercises XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × Java Tutorial Java HOME Java Intro Java Get Started Java Syntax Java Comments Java Variables Java Data Types Java Operators Java Strings Java Math Java Booleans Java If...Else Java Switch Java While Loop Java For Loop Java Break/Continue Java Arrays Java Exceptions Java Methods Java Classes Java Classes/Objects Java Class Attributes Java Class Methods Java Constructors Java Modifiers Java Encapsulation Java Packages / API Java Inheritance Java Polymorphism Java Interface Java Enums Java User Input Java Date Java ArrayList Java HashMap Java Files Java Examples Java Examples Java Arrays ❮ Previous Next ❯ Java Arrays Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value. To declare an array, define the variable type with square brackets: String[] cars; We have now declared a variable that holds an array of strings. To insert values to it, we can use an array literal - place the values in a comma-separated list, inside curly braces: String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; Access the Elements of an Array You access an array element by referring to the index number. This statement accesses the value of the first element in cars: Example String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; System.out.println(cars[0]); // Outputs Volvo Run example » Note: Array indexes start with 0: [0] is the first element. [1] is the second element, etc. Change an Array Element To change the value of a specific element, refer to the index number: Example cars[0] = "Opel"; Example String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; cars[0] = "Opel"; System.out.println(cars[0]); // Now outputs Opel instead of Volvo Run example » Array Length To find out how many elements an array have, use the length property: Example String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; System.out.println(cars.length); // Outputs 4 Run example » Loop Through an Array You can loop through the array elements with the for loop, and use the length property to specify how many times the loop should run. The following example outputs all elements in the cars array: Example String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; for (int i = 0; i < cars.length; i++) { System.out.println(cars[i]); } Run example » Loop Through an Array with For-Each There is also a "for-each" loop, which is used exclusively to loop through elements in arrays: Syntax for (type variable : arrayname) { ... } The following example outputs all elements in the cars array, using a "for-each" loop: Example String[] cars = {"Volvo", "BMW", "Ford", "Mazda"}; for (String i : cars) { System.out.println(i); } Run example » The example above can be read like this: for each String element (called i - as in index) in cars, print out the value of i. If you compare the for loop and for-each loop, you will see that the for-each method is easier to write, it does not require a counter (using the length property), and it is more readable. Multidimensional Arrays A multidimensional array is an array containing one or more arrays. To create a two-dimensional array, add each array within its own set of curly braces: Example int[][] myNumbers = { {1, 2, 3, 4}, {4, 5, 6, 7} }; myNumbers is now an array with two arrays as its elements. To access the elements of the myNumbers array, specify two indexes: one for the array, and one for the element inside that array. This example accesses the third element (2) in the second array (1) of myNumbers: Example int[][] myNumbers = { {1, 2, 3, 4}, {4, 5, 6, 7} }; int x = myNumbers[1][2]; System.out.println(x); // Outputs 6 Run example » We can also use a for loop inside another for loop to get the elements of a two-dimensional array (we still have to point to the two indexes): Example public class MyClass { public static void main(String[] args) { int[][] myNumbers = { {1, 2, 3, 4}, {4, 5, 6, 7} }; for (int i = 0; i < myNumbers.length; ++i) { for(int j = 0; j < myNumbers[i].length; ++j) { System.out.println(myNumbers[i][j]); } } } } Run example » ❮ Previous Next ❯ COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript PHP jQuery Bootstrap XML Read More » REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Python Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Bootstrap Reference SQL Reference PHP Reference HTML Colors jQuery Reference Python Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples How To Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
